{"ast":null,"code":"import Axios from 'axios';\nimport { PRODUCT_CREATE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_FAIL, PRODUCT_DELETE_SUCCESS, PRODUCT_CATEGORY_LIST_SUCCESS, PRODUCT_CATEGORY_LIST_REQUEST, PRODUCT_CATEGORY_LIST_FAIL, PRODUCT_REVIEW_CREATE_REQUEST, PRODUCT_REVIEW_CREATE_SUCCESS, PRODUCT_REVIEW_CREATE_FAIL } from '../constants/productConstants';\nexport const listProducts = ({\n  seller = '',\n  name = '',\n  category = '',\n  order = '',\n  min = 0,\n  max = 0,\n  rating = 0\n}) => async dispatch => {\n  dispatch({\n    type: PRODUCT_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products?seller=${seller}&name=${name}&category=${category}&min=${min}&max=${max}&rating=${rating}&order=${order}`);\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const listProductCategories = () => async dispatch => {\n  dispatch({\n    type: PRODUCT_CATEGORY_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products/categories`);\n    dispatch({\n      type: PRODUCT_CATEGORY_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CATEGORY_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const detailsProduct = productId => async dispatch => {\n  dispatch({\n    type: PRODUCT_DETAILS_REQUEST,\n    payload: productId\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products/${productId}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createProduct = () => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_CREATE_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/products', {}, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateProduct = product => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_UPDATE_REQUEST,\n    payload: product\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.put(`/api/products/${product._id}`, product, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      error: message\n    });\n  }\n};\nexport const deleteProduct = productId => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_DELETE_REQUEST,\n    payload: productId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = Axios.delete(`/api/products/${productId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const createReview = (productId, review) => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_REVIEW_CREATE_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.post(`/api/products/${productId}/reviews`, review, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_REVIEW_CREATE_SUCCESS,\n      payload: data.review\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_REVIEW_CREATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/mikis165/Downloads/amazona/frontend/src/actions/productActions.js"],"names":["Axios","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_FAIL","PRODUCT_DELETE_SUCCESS","PRODUCT_CATEGORY_LIST_SUCCESS","PRODUCT_CATEGORY_LIST_REQUEST","PRODUCT_CATEGORY_LIST_FAIL","PRODUCT_REVIEW_CREATE_REQUEST","PRODUCT_REVIEW_CREATE_SUCCESS","PRODUCT_REVIEW_CREATE_FAIL","listProducts","seller","name","category","order","min","max","rating","dispatch","type","data","get","payload","error","message","listProductCategories","detailsProduct","productId","response","createProduct","getState","userSignin","userInfo","post","headers","Authorization","token","product","updateProduct","put","_id","deleteProduct","delete","createReview","review"],"mappings":"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","sourcesContent":["import Axios from 'axios';\nimport {\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_CATEGORY_LIST_SUCCESS,\n  PRODUCT_CATEGORY_LIST_REQUEST,\n  PRODUCT_CATEGORY_LIST_FAIL,\n  PRODUCT_REVIEW_CREATE_REQUEST,\n  PRODUCT_REVIEW_CREATE_SUCCESS,\n  PRODUCT_REVIEW_CREATE_FAIL,\n} from '../constants/productConstants';\n\nexport const listProducts = ({\n  seller = '',\n  name = '',\n  category = '',\n  order = '',\n  min = 0,\n  max = 0,\n  rating = 0,\n}) => async (dispatch) => {\n  dispatch({\n    type: PRODUCT_LIST_REQUEST,\n  });\n  try {\n    const { data } = await Axios.get(\n      `/api/products?seller=${seller}&name=${name}&category=${category}&min=${min}&max=${max}&rating=${rating}&order=${order}`\n    );\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\n  }\n};\n\nexport const listProductCategories = () => async (dispatch) => {\n  dispatch({\n    type: PRODUCT_CATEGORY_LIST_REQUEST,\n  });\n  try {\n    const { data } = await Axios.get(`/api/products/categories`);\n    dispatch({ type: PRODUCT_CATEGORY_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: PRODUCT_CATEGORY_LIST_FAIL, payload: error.message });\n  }\n};\n\nexport const detailsProduct = (productId) => async (dispatch) => {\n  dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\n  try {\n    const { data } = await Axios.get(`/api/products/${productId}`);\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\nexport const createProduct = () => async (dispatch, getState) => {\n  dispatch({ type: PRODUCT_CREATE_REQUEST });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.post(\n      '/api/products',\n      {},\n      {\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      }\n    );\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data.product,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: PRODUCT_CREATE_FAIL, payload: message });\n  }\n};\nexport const updateProduct = (product) => async (dispatch, getState) => {\n  dispatch({ type: PRODUCT_UPDATE_REQUEST, payload: product });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.put(`/api/products/${product._id}`, product, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: PRODUCT_UPDATE_FAIL, error: message });\n  }\n};\nexport const deleteProduct = (productId) => async (dispatch, getState) => {\n  dispatch({ type: PRODUCT_DELETE_REQUEST, payload: productId });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = Axios.delete(`/api/products/${productId}`, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: PRODUCT_DELETE_SUCCESS });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: PRODUCT_DELETE_FAIL, payload: message });\n  }\n};\nexport const createReview = (productId, review) => async (\n  dispatch,\n  getState\n) => {\n  dispatch({ type: PRODUCT_REVIEW_CREATE_REQUEST });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.post(\n      `/api/products/${productId}/reviews`,\n      review,\n      {\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      }\n    );\n    dispatch({\n      type: PRODUCT_REVIEW_CREATE_SUCCESS,\n      payload: data.review,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: PRODUCT_REVIEW_CREATE_FAIL, payload: message });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}